// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TenetSystem.Infrastructure.Data;

#nullable disable

namespace TenetSystem.Infrastructure.Migrations
{
    [DbContext(typeof(PropertyDbContext))]
    [Migration("20250407110914_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("TenetSystem.Core.Models.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("LayoutMap")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("TenetSystem.Core.Models.RentReceipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RentMonth")
                        .HasColumnType("TEXT");

                    b.Property<int>("TenantId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.HasIndex("UnitId");

                    b.ToTable("RentReceipts");
                });

            modelBuilder.Entity("TenetSystem.Core.Models.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("MoveInDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("MoveOutDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("TenetSystem.Core.Models.TenantHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("MoveInDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("MoveOutDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TenantId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.HasIndex("UnitId");

                    b.ToTable("TenantHistories");
                });

            modelBuilder.Entity("TenetSystem.Core.Models.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuildingId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CurrentTenantId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("LastRentAmount")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UnitNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("CurrentTenantId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("TenetSystem.Core.Models.RentReceipt", b =>
                {
                    b.HasOne("TenetSystem.Core.Models.Tenant", "Tenant")
                        .WithMany("RentReceipts")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TenetSystem.Core.Models.Unit", "Unit")
                        .WithMany("RentReceipts")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("TenetSystem.Core.Models.TenantHistory", b =>
                {
                    b.HasOne("TenetSystem.Core.Models.Tenant", "Tenant")
                        .WithMany("TenantHistories")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TenetSystem.Core.Models.Unit", "Unit")
                        .WithMany("TenantHistories")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("TenetSystem.Core.Models.Unit", b =>
                {
                    b.HasOne("TenetSystem.Core.Models.Building", "Building")
                        .WithMany("Units")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TenetSystem.Core.Models.Tenant", "CurrentTenant")
                        .WithMany("Units")
                        .HasForeignKey("CurrentTenantId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Building");

                    b.Navigation("CurrentTenant");
                });

            modelBuilder.Entity("TenetSystem.Core.Models.Building", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("TenetSystem.Core.Models.Tenant", b =>
                {
                    b.Navigation("RentReceipts");

                    b.Navigation("TenantHistories");

                    b.Navigation("Units");
                });

            modelBuilder.Entity("TenetSystem.Core.Models.Unit", b =>
                {
                    b.Navigation("RentReceipts");

                    b.Navigation("TenantHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
